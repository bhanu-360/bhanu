
MAX, MIN = 1000, -1000

def minmax(depth, nodeindex, maxplayer, values, alpha, beta):
    if depth == 3:
        return values[nodeindex]
    
    if maxplayer:
        best = MIN
        for i in range(0, 2):
            val = minmax(depth + 1, nodeindex * 2 + i, False, values, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)
            if beta <= alpha:
                break
        return best
    else: 
        best = MAX
        for i in range(0, 2):
            val = minmax(depth + 1, nodeindex * 2 + i, True, values, alpha, beta)
            best = min(best, val)
            alpha = min(alpha, best)
            if beta <= alpha:
                break
        return best

if __name__ == "__main__":
    values = [-1, 4, 2, 6, -3, -5, 0, 7]
print("The optimal value is: ", minmax(0, 0, True, values, MIN, MAX))
The optimal value is:  4
 
